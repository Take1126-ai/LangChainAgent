from langchain_core.tools import tool

@tool(parse_docstring=True)
def think_tool(reflection: str) -> str:
    """作業の進捗や意思決定を戦略的に振り返るためのツール。

    各検索の後にこのツールを使用し、結果を分析して次のステップを体系的に計画する。
    これにより、作業の中に意図的な「間」を作り、質の高い意思決定を行えるようにする。

    使用するタイミング:
    - ツール出力を得た後: どんな重要な情報を見つけたか？
    - 次のステップを決める前: 包括的に答えるのに十分か？
    - 作業・分析・問題解決の不足を評価するとき: まだ欠けている具体的な情報は何か？
    - 作業・分析・問題解決を締めくくる前: 今、完全な答えを提供できるか？
    - 問題の複雑さを考えるとき: 検索回数の制限に達しているか？

    振り返りで扱うべき内容:
    1. 現在の発見の分析 - どんな具体的な情報を集めたか？
    2. ギャップの評価 - まだ欠けている重要な情報は何か？
    3. 質の評価 - 良い答えを出すのに十分な証拠や例があるか？
    4. 戦略的判断 - さらに検索を続けるべきか、それとも答えを提示すべきか？

    Args:
        reflection: 作業の進捗、発見、ギャップ、次のステップについての詳細な振り返り

    Returns:
        意思決定のために振り返りが記録されたことの確認
    """
    return f"Reflection recorded: {reflection}"
